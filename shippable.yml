# Language setting
language: node_js

build_image: drydock/u12nod:prod

# Version number
node_js:
  - 0.12

# The path for Xunit to output test reports
env:
  - XUNIT_FILE=shippable/testresults/result.xml
  - secure: rhAhX33Sx18MekA8T+b5sG3UtlqvZAeFaOlGQEFmtMioEXAATixk+DeZRFSlhXrDgTN9JDskmLqggbJ3qD3oHglzXDQ4q4olM+ptMtRxBl7Qd28AT31g82v0M/37+BknbphG73MZr4J9GBvv+xK3u23+LuMCJr/OnqYQ5eProddH2lhJuw6Ag7E+aU7ATbd6OP3cOLxRZgRMEy/Ekzp2bffWLl1KMFeO1NMTt0gSOmP/kq+w7qH5ZDHAJM6RWLCiDYDtPeKW+NL+GVrtEzDJPn08QBOUfpqArNltTLLlUW1w67Bf+BRROFx/neUYoZRYwf//g2sEYk7uza7D6P2ffw==
before_install:
  - which heroku || wget -qO- https://toolbelt.heroku.com/install-ubuntu.sh | sh

install:
  - source ~/.nvm/nvm.sh && nvm install 0.12
  - node --version
  - npm install
#  - . installMongo.sh
#  - cat /etc/mongod.conf
#  - sudo mongod --smallfiles &
#  - sleep 15
#  - mongo --eval 'db.collection.find()'

# Create directories for test and coverage reports
before_script:
  - mkdir -p shippable/testresults
  - mkdir -p shippable/codecoverage

# Running the tests with grunt
script:
  - grunt

# Tell istanbul to generate a coverage report
after_script:
  - ./node_modules/.bin/istanbul cover grunt -- -u tdd
  - ./node_modules/.bin/istanbul report cobertura --dir  shippable/codecoverage/

after_success:
  - test -f ~/.ssh/id_rsa.heroku || ssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.heroku && heroku keys:add ~/.ssh/id_rsa.heroku  
  - git remote -v | grep ^heroku || heroku git:remote --ssh-git --app shippable-heroku-1001
  - git push https://git.heroku.com/shippable-heroku-1001.git  master
