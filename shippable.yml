# Language setting
language: node_js

build_image: drydock/u12nod:prod

# Version number
node_js:
  - 0.12

# The path for Xunit to output test reports
env:
  - XUNIT_FILE=shippable/testresults/result.xml
  - secure: HQ4EujWGSD+KtM0+1vEhK3bO4m1swIVnH/dAqgLvZVvi221o226JvIJb90zN9Fcdhnfa6/WRBnsF/kS75nBTrrnaGZA7435mLkwNN+rSQiflUsVDqydJI1FuO/5akcRxPqDC/EWi8HwMf+AFnt8VbMeBv/psfy6icNfsyRAdqcH4kNTejXMeEZejpPxvB0Yjl78pa1Zr0AQo2DI9bTpeCdKPYVKXnraoi58FzUYhZbMXmsl/U3tOPOOxVsIaqWxXo5IlBF34nU8HlEEeq1nfZTw1qAcrFcrBoVM0iYvJgqZmURgKq1Yt62Ej3SaQk16Z+J9F5bs+xA2ikd5TEyR58A==

before_install:
  - which heroku || wget -qO- https://toolbelt.heroku.com/install-ubuntu.sh | sh

install:
  - source ~/.nvm/nvm.sh && nvm install 0.12
  - node --version
  - npm install
#  - . installMongo.sh
#  - cat /etc/mongod.conf
#  - sudo mongod --smallfiles &
#  - sleep 15
#  - mongo --eval 'db.collection.find()'

# Create directories for test and coverage reports
before_script:
  - mkdir -p shippable/testresults
  - mkdir -p shippable/codecoverage

# Running the tests with grunt
script:
  - grunt

# Tell istanbul to generate a coverage report
after_script:
  - ./node_modules/.bin/istanbul cover grunt -- -u tdd
  - ./node_modules/.bin/istanbul report cobertura --dir  shippable/codecoverage/

after_success:
- test -f ~/.ssh/id_rsa.heroku || ssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.heroku && heroku keys:add ~/.ssh/id_rsa.heroku  
- git remote -v | grep ^heroku || heroku git:remote --ssh-git --app shippable-heroku-1001
  - git push https://git.heroku.com/shippable-heroku-1001.git  master
